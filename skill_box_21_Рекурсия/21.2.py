'''Задача 2. Свой zip 2
Что нужно сделать

Написав аналог функции zip на собеседовании, вы вспомнили, что этот код можно сделать даже лучше, и резко вырвали
листок с кодом из рук работодателя, оставив его в недоумении.

Напишите функцию, которая будет являться аналогом функции zip и сделайте так, чтобы программа работала с любыми
итерируемыми типами данных.

Нельзя пользоваться циклами (за исключением генераторов), условными операторами и функциями определения типа
(isinstance или type).
Функция должна возвращать список с кортежами, в котором n-ый кортеж состоит из n-ых элементов всех последовательностей.
Например, десятый кортеж будет содержать десятый элемент каждой из переданных последовательностей
Основной код оставьте пустым или закомментированным (используйте его только для тестирования).'''

def analog_zip(*args):
    min_num = min([len(element) for element in args])
    tpl_list = [tuple(struct[i] for struct in map(list, args)) for i in range(min_num)]
    return tpl_list


string = {10: 20, 30: 40, 50: 60, 70:80}
tpl = (10, 20, 30, 40)
print(analog_zip(string, tpl))